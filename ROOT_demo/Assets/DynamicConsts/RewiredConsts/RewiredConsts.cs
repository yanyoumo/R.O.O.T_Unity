// <auto-generated>
// Rewired Constants
// This list was generated on 2021/6/7 10:48:10
// The list applies to only the Rewired Input Manager from which it was generated.
// If you use a different Rewired Input Manager, you will have to generate a new list.
// If you make changes to the exported items in the Rewired Input Manager, you will
// need to regenerate this list.
// </auto-generated>

namespace RewiredConsts {
    public static partial class Action {
        public static partial class Default {
        }
        public static partial class Button {
            [Rewired.Dev.ActionIdFieldInfo(categoryName = "Action that mainly based on button", friendlyName = "CursorUp")]
            public const int CursorUp = 1;
            [Rewired.Dev.ActionIdFieldInfo(categoryName = "Action that mainly based on button", friendlyName = "CursorDown")]
            public const int CursorDown = 2;
            [Rewired.Dev.ActionIdFieldInfo(categoryName = "Action that mainly based on button", friendlyName = "CursorLeft")]
            public const int CursorLeft = 3;
            [Rewired.Dev.ActionIdFieldInfo(categoryName = "Action that mainly based on button", friendlyName = "CursorRight")]
            public const int CursorRight = 4;
            [Rewired.Dev.ActionIdFieldInfo(categoryName = "Action that mainly based on button", friendlyName = "TelemetryPause")]
            public const int TelemetryPause = 5;
            [Rewired.Dev.ActionIdFieldInfo(categoryName = "Action that mainly based on button", friendlyName = "HintHDD")]
            public const int HintHDD = 8;
            [Rewired.Dev.ActionIdFieldInfo(categoryName = "Action that mainly based on button", friendlyName = "HintNetwork")]
            public const int HintNetwork = 9;
            [Rewired.Dev.ActionIdFieldInfo(categoryName = "Action that mainly based on button", friendlyName = "HintControl")]
            public const int HintControl = 10;
            [Rewired.Dev.ActionIdFieldInfo(categoryName = "Action that mainly based on button", friendlyName = "CycleNext")]
            public const int CycleNext = 11;
            [Rewired.Dev.ActionIdFieldInfo(categoryName = "Action that mainly based on button", friendlyName = "Func0")]
            public const int Func0 = 12;
            [Rewired.Dev.ActionIdFieldInfo(categoryName = "Action that mainly based on button", friendlyName = "Func1")]
            public const int Func1 = 13;
            [Rewired.Dev.ActionIdFieldInfo(categoryName = "Action that mainly based on button", friendlyName = "Func2")]
            public const int Func2 = 14;
            [Rewired.Dev.ActionIdFieldInfo(categoryName = "Action that mainly based on button", friendlyName = "Func3")]
            public const int Func3 = 15;
            [Rewired.Dev.ActionIdFieldInfo(categoryName = "Action that mainly based on button", friendlyName = "Func4")]
            public const int Func4 = 16;
            [Rewired.Dev.ActionIdFieldInfo(categoryName = "Action that mainly based on button", friendlyName = "Func5")]
            public const int Func5 = 17;
            [Rewired.Dev.ActionIdFieldInfo(categoryName = "Action that mainly based on button", friendlyName = "Func6")]
            public const int Func6 = 18;
            [Rewired.Dev.ActionIdFieldInfo(categoryName = "Action that mainly based on button", friendlyName = "Func7")]
            public const int Func7 = 19;
            [Rewired.Dev.ActionIdFieldInfo(categoryName = "Action that mainly based on button", friendlyName = "Func8")]
            public const int Func8 = 20;
            [Rewired.Dev.ActionIdFieldInfo(categoryName = "Action that mainly based on button", friendlyName = "Func9")]
            public const int Func9 = 21;
            [Rewired.Dev.ActionIdFieldInfo(categoryName = "Action that mainly based on button", friendlyName = "Confirm")]
            public const int Confirm0 = 31;
            [Rewired.Dev.ActionIdFieldInfo(categoryName = "Action that mainly based on button", friendlyName = "InGameOverLayToggle")]
            public const int InGameOverLayToggle = 34;
            [Rewired.Dev.ActionIdFieldInfo(categoryName = "Action that mainly based on button", friendlyName = "Hold this button for dragging unit")]
            public const int HoldForDrag = 42;
            [Rewired.Dev.ActionIdFieldInfo(categoryName = "Action that mainly based on button", friendlyName = "Quit game as a master break")]
            public const int Quit = 43;
            [Rewired.Dev.ActionIdFieldInfo(categoryName = "Action that mainly based on button", friendlyName = "Confirm button for Swap Skill")]
            public const int SwapConfirm = 45;
            [Rewired.Dev.ActionIdFieldInfo(categoryName = "Action that mainly based on button", friendlyName = "InGamePauseMenu")]
            public const int PauseMenu = 46;
        }
        public static partial class Analog {
            [Rewired.Dev.ActionIdFieldInfo(categoryName = "Action that mainly based on Analog Input(mouse axis analog stick)", friendlyName = "X-axis value for a main analog input--could be mouse or a analog stick")]
            public const int MainAxis_X = 23;
            [Rewired.Dev.ActionIdFieldInfo(categoryName = "Action that mainly based on Analog Input(mouse axis analog stick)", friendlyName = "Y-axis value for a main analog input--could be mouse or a analog stick")]
            public const int MainAxis_Y = 26;
            [Rewired.Dev.ActionIdFieldInfo(categoryName = "Action that mainly based on Analog Input(mouse axis analog stick)", friendlyName = "X-axis value for secondray analog input.")]
            public const int SubAxis_X = 25;
            [Rewired.Dev.ActionIdFieldInfo(categoryName = "Action that mainly based on Analog Input(mouse axis analog stick)", friendlyName = "Y-axis value for secondray analog input.")]
            public const int SubAxis_Y = 27;
        }
        public static partial class Composite {
            [Rewired.Dev.ActionIdFieldInfo(categoryName = "Actions that composite from multiple actions or convert from one action.", friendlyName = "MoveUnit")]
            public const int MoveUnit = 6;
            [Rewired.Dev.ActionIdFieldInfo(categoryName = "Actions that composite from multiple actions or convert from one action.", friendlyName = "RotateUnit")]
            public const int RotateUnit = 7;
            [Rewired.Dev.ActionIdFieldInfo(categoryName = "Actions that composite from multiple actions or convert from one action.", friendlyName = "Composition of func0~9; convert actual ID to another val.")]
            public const int FuncComp = 30;
            [Rewired.Dev.ActionIdFieldInfo(categoryName = "Actions that composite from multiple actions or convert from one action.", friendlyName = "Drag")]
            public const int Drag = 32;
            [Rewired.Dev.ActionIdFieldInfo(categoryName = "Actions that composite from multiple actions or convert from one action.", friendlyName = "request shop raise one tier")]
            public const int ShopTierUp = 40;
            [Rewired.Dev.ActionIdFieldInfo(categoryName = "Actions that composite from multiple actions or convert from one action.", friendlyName = "request shop lower one tier")]
            public const int ShopTierDown = 41;
            [Rewired.Dev.ActionIdFieldInfo(categoryName = "Actions that composite from multiple actions or convert from one action.", friendlyName = "ForceFlyUnit")]
            public const int ForceFlyUnit = 44;
        }
        public static partial class Passthough {
            [Rewired.Dev.ActionIdFieldInfo(categoryName = "Action carry a simple Raw input, act more lke a hardware event", friendlyName = "MouseLeftButtonPassthough")]
            public const int MouseLeft = 22;
            [Rewired.Dev.ActionIdFieldInfo(categoryName = "Action carry a simple Raw input, act more lke a hardware event", friendlyName = "Action0")]
            public const int Enter = 28;
            [Rewired.Dev.ActionIdFieldInfo(categoryName = "Action carry a simple Raw input, act more lke a hardware event", friendlyName = "Action0")]
            public const int LeftAlt = 29;
            [Rewired.Dev.ActionIdFieldInfo(categoryName = "Action carry a simple Raw input, act more lke a hardware event", friendlyName = "Hold")]
            public const int Hold = 33;
            [Rewired.Dev.ActionIdFieldInfo(categoryName = "Action carry a simple Raw input, act more lke a hardware event", friendlyName = "Action0")]
            public const int MouseRight = 35;
            [Rewired.Dev.ActionIdFieldInfo(categoryName = "Action carry a simple Raw input, act more lke a hardware event", friendlyName = "Action0")]
            public const int MouseMiddle = 36;
            [Rewired.Dev.ActionIdFieldInfo(categoryName = "Action carry a simple Raw input, act more lke a hardware event", friendlyName = "Action0")]
            public const int MouseWheel = 37;
        }
    }
    public static partial class Category {
        public const int Default = 0;
    }
    public static partial class Layout {
        public static partial class Joystick {
            public const int Default = 0;
        }
        public static partial class Keyboard {
            public const int Default = 0;
        }
        public static partial class Mouse {
            public const int Default = 0;
        }
        public static partial class CustomController {
            public const int Default = 0;
        }
    }
    public static partial class Player {
        [Rewired.Dev.PlayerIdFieldInfo(friendlyName = "System")]
        public const int System = 9999999;
        [Rewired.Dev.PlayerIdFieldInfo(friendlyName = "Player0")]
        public const int Player0 = 0;
    }
    public static partial class CustomController {
    }
    public static partial class LayoutManagerRuleSet {
    }
    public static partial class MapEnablerRuleSet {
    }
}
